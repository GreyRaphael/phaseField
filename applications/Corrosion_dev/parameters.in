# =================================================================================
# Set the number of dimensions (2 or 3 for a 2D or 3D calculation)
# =================================================================================
set Number of dimensions = 2

# =================================================================================
# Set the length of the domain in all three dimensions
# (Domain size Z ignored in 2D)
# =================================================================================
# Each axes spans from zero to the specified length
set Domain size X = 1.875e-05
set Domain size Y = 1.875e-05
set Domain size Z = 0

# =================================================================================
# Set the element parameters
# =================================================================================
# The number of elements in each direction is 2^(refineFactor) * subdivisions
# Subdivisions Z ignored in 2D
# For optimal performance, use refineFactor primarily to determine the element size
set Subdivisions X = 1
set Subdivisions Y = 1
set Subdivisions Z = 1

set Refine factor = 7

# Set the polynomial degree of the element (allowed values: 1, 2, or 3)
set Element degree = 1

# =================================================================================
# Set the adaptive mesh refinement parameters
# =================================================================================
# Set the flag determining if adaptive meshing is activated
set Mesh adaptivity = false

# Set the maximum and minimum level of refinement
set Max refinement level = 8
set Min refinement level = 4

# Set the fields used to determine the refinement using their index.
set Refinement criteria fields = psi

# Set the maximum and minimum value of the fields where the mesh should be refined
set Refinement window max = 0.9999 
set Refinement window min = 1.0e-6

# Set the number of time steps between remeshing operations
set Steps between remeshing operations = 500

# =================================================================================
# Set the time step parameters
# =================================================================================
# The size of the time step
set Time step = 2.0e-6

# The simulation ends when either the number of time steps is reached or the
# simulation time is reached.
set Number of time steps = 2000000
# set Number of time steps = 100

# =================================================================================
# Set the linear solver parameters
# =================================================================================

subsection Linear solver parameters: Phi
	# Whether the tolerance value is compared to the residual (ABSOLUTE_RESIDUAL)
	# or the change in the residual (RELATIVE_RESIDUAL_CHANGE)
	set Tolerance type = ABSOLUTE_RESIDUAL

	# The tolerance for convergence (L2 norm)
	set Tolerance value = 1.0e-6

	# The maximum number of linear solver iterations per solve
	set Maximum linear solver iterations = 500000
end

# =================================================================================
# Set the nonlinear solver parameters
# =================================================================================

set Maximum nonlinear solver iterations = 100

subsection Nonlinear solver parameters: Phi
    set Tolerance type = ABSOLUTE_SOLUTION_CHANGE
    set Tolerance value = 1e-10
    set Use backtracking line search damping = false
    set Constant damping value = 1.0
    set Use Laplace's equation to determine the initial guess = false
end

# =================================================================================
# Set the boundary conditions
# =================================================================================
# Set the boundary condition for each variable, where each variable is given by
# its name, as defined in equations.h. The four boundary condition
# types are NATURAL, DIRICHLET, NON_UNIFORM_DIRICHLET and PERIODIC. If all
# of the boundaries have the same boundary condition, only one boundary condition
# type needs to be given. If multiple boundary condition types are needed, give a
# comma-separated list of the types. The order is the miniumum of x, maximum of x,
# minimum of y, maximum of y, minimum of z, maximum of z (i.e left, right, bottom,
# top in 2D and left, right, bottom, top, front, back in 3D). The value of a
# Dirichlet BC is specfied in the following way -- DIRCHILET: val -- where 'val' is
# the desired value. If the boundary condition is NON_UNIFORM_DIRICHLET, the
# boundary condition should be specified in the appropriate function in 'ICs_and_BCs.h'.
# Example 1: All periodic BCs for variable 'c'
# set Boundary condition for variable c = PERIODIC
# Example 2: Zero-derivative BCs on the left and right, Dirichlet BCs with value
# 1.5 on the top and bottom for variable 'n' in 2D
# set Boundary condition for variable n = NATURAL, NON_UNIFORM_DIRICHLET, DIRICHLET: 1.5, DIRICHLET: 1.5

set Boundary condition for variable n = NATURAL
set Boundary condition for variable mu = NATURAL
set Boundary condition for variable psi = NATURAL
set Boundary condition for variable cM = NATURAL, NATURAL, NATURAL ,DIRICHLET: 0.0
set Boundary condition for variable cP = NATURAL, NATURAL, NATURAL ,DIRICHLET: 1000.0  
set Boundary condition for variable Phi = NATURAL, NATURAL, NATURAL ,DIRICHLET: 0.0  

# =================================================================================
# Set the output parameters
# =================================================================================
# Type of spacing between outputs ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Output condition = EQUAL_SPACING

# Number of times the program outputs the fields (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of outputs = 200

# The number of time steps between updates being printed to the screen
set Skip print steps = 10000

# =================================================================================
# Set the checkpoint/restart parameters
# =================================================================================
# Whether to start this simulation from the checkpoint of a previous simulation
set Load from a checkpoint = false

# Type of spacing between checkpoints ("EQUAL_SPACING", "LOG_SPACING", "N_PER_DECADE",
# or "LIST")
set Checkpoint condition = EQUAL_SPACING

# Number of times the creates checkpoints (total number for "EQUAL_SPACING"
# and "LOG_SPACING", number per decade for "N_PER_DECADE", ignored for "LIST")
set Number of checkpoints = 100

# =================================================================================
# Set the model constants
# =================================================================================
# Set the user-defined model constants, which must have a counter-part given in
# customPDE.h. These are most often used in the residual equations in equations.h,
# but may also be used for initial conditions and nucleation calculations. The type
# options currently are DOUBLE, INT, BOOL, TENSOR, and [symmetry] ELASTIC CONSTANTS
# where [symmetry] is ISOTROPIC, TRANSVERSE, ORTHOTROPIC, or ANISOTROPIC.

# The reaction current
set Model constant irxnV = 20000.0, DOUBLE

# The exchange current density
set Model constant i0V = 9.8975, DOUBLE

#The metal cation molar volume
set Model constant VMV= 6.9241e-6, DOUBLE

# The metal cation charge number
set Model constant zMV = 2.2022, DOUBLE

# The supporting cation charge number
set Model constant zPV = 1.0, DOUBLE

# The supporting anion charge number
set Model constant znV = -1.0, DOUBLE

# The metal cation diffusivity
set Model constant DMV = 6.8957e-10, DOUBLE

# The supporting cation diffusivity
set Model constant DPV = 13.32e-10, DOUBLE

# The supporting anion diffusivity
set Model constant DnV = 20.32e-10, DOUBLE

# The metal cation saturation concentration
set Model constant cMsatV = 5.1e3, DOUBLE

# The gradient energy coefficient, epsilon^2 in equations.h
set Model constant epssqV = 4.0e-14, DOUBLE

# Corrosion potential
set Model constant EcorrV = -0.24, DOUBLE

# Applied potential
set Model constant VsV = 0.05, DOUBLE

# Constant beta
set Model constant betaV = 0.65, DOUBLE

# Temperature (in Kelvin)
set Model constant TV = 298.15, DOUBLE

#safety factor for domain parameter to avoid division by zero
set Model constant lthresh = 1.0e-7, DOUBLE

